apply plugin: 'com.android.library'

ext {
    bintrayRepo = 'maven'
    bintrayName = 'doorbell'

    publishedGroupId   = 'com.wujilin.doorbell'
    libraryName        = 'Doorbell'
    artifact           = 'doorbell'
    libraryDescription = 'A simple library to start activities or call callbacks with condition in your Android apps.'

    siteUrl  = 'https://github.com/belinwu/doorbell'
    gitUrl   = 'https://github.com/belinwu/doorbell.git'
    issueUrl = 'https://github.com/belinwu/doorbell/issues'

    libraryVersionCode = 4
    libraryVersion     = '0.4.0'

    developerId    = 'belinwu'
    developerName  = 'Belin Wu'
    developerEmail = 'belinwu@qq.com'

    licenseName = 'The MIT License'
    licenseUrl = 'https://raw.githubusercontent.com/belinwu/doorbell/master/LICENSE'
    allLicenses = ["MIT"]
}

group   = publishedGroupId                               // Maven Group ID for the artifact
version = libraryVersion

android {
    compileSdkVersion 23
    buildToolsVersion "23.0.2"

    defaultConfig {
        minSdkVersion 10
        targetSdkVersion 23
        versionCode libraryVersionCode
        versionName version
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    testCompile 'junit:junit:4.12'
    compile 'com.android.support:support-v4:23.1.1'
    compile 'com.android.support:support-annotations:23.1.1'
}

apply plugin: 'com.github.dcendents.android-maven'

install {
    repositories.mavenInstaller {
        // This generates POM.xml with proper parameters
        pom {
            project {
                packaging 'aar'
                groupId publishedGroupId
                artifactId artifact

                // Add your description here
                name libraryName
                description libraryDescription
                url siteUrl

                // Set your license
                licenses {
                    license {
                        name licenseName
                        url licenseUrl
                    }
                }
                developers {
                    developer {
                        id developerId
                        name developerName
                        email developerEmail
                    }
                }
                scm {
                    connection gitUrl
                    developerConnection gitUrl
                    url siteUrl
                }
            }
        }
    }
}

apply plugin: 'com.jfrog.bintray'

task sourcesJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
    baseName   = bintrayName
    classifier = 'sources'
}

task javadoc(type: Javadoc) {
    source = android.sourceSets.main.java.srcDirs
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
    description "Doorbell Javadoc"
    source = android.libraryVariants["release"].javaCompile.source
    ext.androidJar = "${android.sdkDirectory}/platforms/${android.compileSdkVersion}/android.jar"
    classpath = files(android.libraryVariants["release"].javaCompile.classpath.files) + files(ext.androidJar)
    options.links("http://docs.oracle.com/javase/7/docs/api/");
    options.links("http://d.android.com/reference/");
    exclude '**/BuildConfig.java'
    exclude '**/R.java'
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    baseName   = bintrayName
    from javadoc.destinationDir
}

artifacts {
    archives javadocJar
    archives sourcesJar
}

// Bintray
Properties properties = new Properties()
properties.load(project.rootProject.file('local.properties').newDataInputStream())

bintray {
    user = properties.getProperty("bintray.user")
    key = properties.getProperty("bintray.apikey")

    configurations = ['archives']
    pkg {
        repo = bintrayRepo
        name = bintrayName
        desc = libraryDescription
        websiteUrl = siteUrl
        vcsUrl = gitUrl
        issueTrackerUrl = issueUrl
        licenses = allLicenses
        publish = true
        publicDownloadNumbers = true
        version {
            desc = libraryDescription
//            gpg {
//                sign = false //Determines whether to GPG sign the files. The default is false
//                passphrase = properties.getProperty("bintray.gpg.password")
//                //Optional. The passphrase for GPG signing'
//            }
        }
    }
}

